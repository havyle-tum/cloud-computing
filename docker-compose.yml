version: "3.8"

services:
  web:
    image: havyy2728/exercise-web
    build: 
      context: ./web
      dockerfile: Dockerfile
    container_name: web
    depends_on:
      - books-get
    environment:
      - MONGO_URI=mongodb://mongo:27017
    volumes:
      - ./web:/usr/src/app
    restart: unless-stopped
    networks:
      - book-store

  books-get:
    image: havyy2728/exercise-books-get
    build: 
      context: ./books-get
      dockerfile: Dockerfile
    container_name: books-get
    depends_on:
      - mongo
    environment:
      - MONGO_URI=mongodb://mongo:27017
    volumes:
      - ./services/books-get:/usr/src/app
    restart: unless-stopped
    networks:
      - book-store

  books-post:
    image: havyy2728/exercise-books-post
    build: 
      context: ./books-post
      dockerfile: Dockerfile
    container_name: books-post
    depends_on:
      - mongo
    environment:
      - MONGO_URI=mongodb://mongo:27017
    volumes:
      - ./services/books-post:/usr/src/app
    restart: unless-stopped
    networks:
      - book-store

  books-put:
    image: havyy2728/exercise-books-put
    build: 
      context: ./books-put
      dockerfile: Dockerfile
    container_name: books-put
    depends_on:
      - mongo
    environment:
      - MONGO_URI=mongodb://mongo:27017
    volumes:
      - ./services/books-put:/usr/src/app
    restart: unless-stopped
    networks:
      - book-store

  books-delete:
    image: havyy2728/exercise-books-delete
    build: 
      context: ./books-delete
      dockerfile: Dockerfile
    container_name: books-delete
    depends_on:
      - mongo
    environment:
      - MONGO_URI=mongodb://mongo:27017
    volumes:
      - ./services/books-delete:/usr/src/app
    restart: unless-stopped
    networks:
      - book-store

  mongo:
    image: mongo:latest
    container_name: mongo
    restart: unless-stopped
    ports:
      - "27017:27017"
    volumes:
      - mongo-data:/data/db
    networks:
      - book-store

  nginx:
      image: nginx:alpine
      restart: unless-stopped
      ports:
        - "3030:80"
      volumes:
        - ./nginx/nginx.conf:/etc/nginx/nginx.conf
      depends_on:
        - web
        - books-get
        - books-post
        - books-put
        - books-delete
      networks:
        - book-store

volumes:
  mongo-data:

networks:
  book-store:
    driver: bridge